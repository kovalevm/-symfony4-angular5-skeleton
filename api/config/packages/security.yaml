security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
#        your_db_provider:
#            entity:
#                class: App\Entity\User
#                property: apiKey
        api_key_user_provider:
#            id: App\Security\TokenAuthenticator
            id: App\Security\ApiKeyUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        register:
            pattern: ^/(users/login|users/register)$
            anonymous: ~
        main:
#            anonymous: ~
#            logout: ~
#            guard:
#                authenticators:
#                    - App\Security\TokenAuthenticator
            pattern: ^/
            stateless: true
            simple_preauth:
                authenticator: App\Security\BearerAuthenticator
            provider: api_key_user_provider
#            logout:
#                path: /login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
#        - { path: ^/, roles: ROLE_USER }
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register, role: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    encoders:
        App\Entity\User: bcrypt
